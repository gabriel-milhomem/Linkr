{
  "name": "Linkr",
  "version": "1.0.0",
  "description": "WIP = WORKING IN PROGRESS TESTE MILHOMEM - Geral     - [x]  Manipule o HTML usando somente React (sem usar o document nem bibliotecas como jQuery)     - [x]  Seu projeto deverá ser desenvolvido utilizando Git e GitHub     - [x]  Para isso, crie um repositório público no seu GitHub e compartilhe acesso com sua dupla     - [x]  **A cada requisito implementado** faça um commit com uma mensagem descritiva do que você evoluiu. Caso queira dividir um requisito em vários commits, não há problema. Mas evite colocar mais de um requisito no mesmo commit - Layout     - [wip]  Aplicar layout para desktop, seguindo imagens fornecidas     - [wip]  Aplicar layout para mobile, seguindo imagens fornecidas     - [wip]  Fontes e cores devem ser extraídas do Figma: [https://www.figma.com/file/PzDjhf1EyeZ0opdDnhLmwJ/linkr?node-id=0%3A1](https://www.figma.com/file/PzDjhf1EyeZ0opdDnhLmwJ/linkr?node-id=0%3A1) (crie uma conta no Figma e se logue para ter acesso ao Inspect)     - [x]  Tamanhos/posicionamento podem ser aproximados, não é necessário copiar o Figma (não recomendado!)     - [wip]  Para ícones, utilize a biblioteca **react-icons** - Tela de Login (rota \"/\")     - Login         - [ ]  Ao clicar em entrar, caso algum dos campos esteja vazio, deverá aparecer um alert solicitando o preenchimento dos campos         - [ ]  Ao clicar em entrar, caso os campos estejam preenchidos, deverá ser enviado um request `post` para o servidor, seguindo documentação         - [ ]  Caso o servidor retorne uma falha (status 401), deverá ser lançado um alert para o usuário de email/senha incorretos         - [ ]  Caso o servidor retorne sucesso (status 200), o usuário deve ser redirecionado para a rota \"/timeline\"         - [ ]  Em caso de sucesso, o servidor retornará na resposta também um código identificador do usuário que você deve **guardar** para usar nos próximos requests pro servidor, assim como dados sobre usuário (como nome e foto)         - [ ]  Ao clicar em entrar, o botão deve ser desabilitado até o servidor responder, evitando que o usuário clique no botão várias vezes         - [ ]  Ao clicar em \"First time? Create an account!\", os campos devem mudar pro formato da tela 2     - Cadastro         - [ ]  Ao clicar em cadastrar, caso algum dos campos esteja vazio, deverá aparecer um alert solicitando o preenchimento dos campos         - [ ]  Ao clicar em entrar, caso os campos estejam preenchidos, deverá ser enviado um request `post` para o servidor, seguindo documentação         - [ ]  Caso o servidor retorne uma falha (status 400), deverá ser lançado um alert para o usuário informando que o email inserido já está cadastrado         - [ ]  Caso o servidor retorne sucesso (status 201), o usuário deve ser redirecionado para a rota \"/timeline\"         - [ ]  Em caso de sucesso, o servidor retornará na resposta também um código identificador do usuário que você deve **guardar** para usar nos próximos requests pro servidor, assim como dados sobre usuário (como nome e foto)         - [ ]  Ao clicar em cadastrar, o botão deve ser desabilitado até o servidor responder, evitando que o usuário clique no botão várias vezes         - [ ]  Ao clicar em \"Switch back to Log In\", os campos devem mudar pro formato da tela 1     - Autenticação         - [ ]  A partir da próxima tela, todos os requests para o servidor devem incluir um **header** de nome `User-Token`, contendo o valor retornado pelo servidor no request de autenticação (que você guardou nos requisitos anteriores)",
  "main": "webpack.config.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gpbPiazza/Linkr.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/gpbPiazza/Linkr/issues"
  },
  "homepage": "https://github.com/gpbPiazza/Linkr#readme",
  "dependencies": {
    "@babel/core": "^7.12.3",
    "@babel/preset-env": "^7.12.1",
    "@babel/preset-react": "^7.12.1",
    "axios": "^0.21.0",
    "babel-loader": "^8.1.0",
    "react": "^17.0.1",
    "react-dom": "^17.0.1",
    "react-hashtag": "^2.1.2",
    "react-icons": "^3.11.0",
    "react-router-dom": "^5.2.0",
    "styled-components": "^5.2.0",
    "webpack": "^5.2.0",
    "webpack-cli": "^4.1.0",
    "webpack-dev-server": "^3.11.0"
  }
}
